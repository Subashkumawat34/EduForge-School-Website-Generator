/* Reset and Box Sizing */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Ensure html and body allow scrolling */
html,
body {
  width: 100%;
  min-height: 100vh; /* Use min-height to allow content to grow */
  overflow-x: hidden;
}

/* Page container */
.page-container {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  padding: 0px 20px;
}

/* Hero section */
.hero-section {
  min-height: calc(
    100vh - 80px
  ); /* Adjusted for navbar height, if hero is first visible content */
  display: flex; /* To center content-wrapper */
  align-items: center; /* To center content-wrapper */
  justify-content: center; /* To center content-wrapper */
  background-color: rgb(235, 235, 235); /* Consider a more modern palette */
  padding: 2rem; /* Default padding */
  /* border-radius: 20px; This might look odd for a full-width section */
  /* max-width: 1400px; If not full-width, then max-width and margin auto */
  /* margin-left: auto; */
  /* margin-right: auto; */
  width: 100%; /* Full width */
  /* padding-top: 70px; This padding is handled by .app-content in App.jsx for overall page */
}

.content-wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 1200px; /* Max width for content inside hero */
  gap: 2rem;
  /* height: 100%; Removed, let content define height */
  align-items: center; /* Center items when stacked vertically */
  text-align: center; /* Center text content */
}

.text-content {
  width: 100%;
  max-width: 600px; /* Constrain text width for readability */
}

.text-content h1 {
  margin-top: 0;
  margin-bottom: 1.5rem;
  font-size: 2.5rem; /* Example size */
}

.button-parent {
  display: flex;
  flex-direction: column; /* Stack buttons on small screens */
  align-items: center; /* Center buttons */
  gap: 1rem; /* Adjusted gap */
  margin-top: 1.5rem; /* Increased margin */
}

.button-parent .btn {
  /* Target Bootstrap buttons */
  min-width: 200px; /* Minimum width for buttons */
}

.image-container {
  width: 100%;
  max-width: 500px; /* Max width for image */
}

.responsive-image {
  max-width: 100%;
  height: auto;
  display: block;
  border-radius: 8px; /* Optional: rounded corners for image */
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); /* Optional: subtle shadow */
}

/* Content section - for content below hero */
.content-section {
  flex: 1; /* Takes remaining space if page-container is flex */
  padding: 1rem;
  width: 100%;
  margin: 1rem auto; /* Add top margin to separate from hero */
  width: calc(100% - 40px);
  background-color: white; /* Or transparent if body has bg color */
  border-radius: 8px; /* Optional */
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05); /* Optional */
}

/* Tablet and desktop layout adjustments */
@media (min-width: 768px) {
  .hero-section {
    padding: 3rem;
    /* padding-top: 70px; Should still be handled by .app-content */
  }

  .content-wrapper {
    flex-direction: row;
    gap: 3rem;
    align-items: center; /* Align items centrally in a row */
    text-align: left; /* Align text to left on larger screens */
  }

  .text-content {
    flex: 1; /* Allow text content to take available space */
    text-align: left; /* Align text to left on larger screens */
  }
  .text-content h1 {
    font-size: 3rem; /* Larger font for desktop */
  }

  .image-container {
    flex: 1; /* Allow image container to take available space */
  }

  .button-parent {
    flex-direction: row; /* Buttons side-by-side */
    justify-content: flex-start; /* Align buttons to the start */
    gap: 1.5rem;
  }
}

/* Styling for .works-text if it's a custom class for the "See How EduForge Works" button */
.works-text.btn-link {
  /* Make it more specific if it's a Bootstrap button */
  color: #007bff; /* Or your primary color */
  text-decoration: none;
  font-weight: 500;
}
.works-text.btn-link:hover {
  text-decoration: underline;
}

.content-paragraph {
  font-size: large;
  color: rgb(2, 117, 2);
  font-weight: 500;
}
